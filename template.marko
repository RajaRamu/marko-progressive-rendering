<optimizer-page package-path="./optimizer.json"/>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>marko-async</title>
    <optimizer-head/>
    <script>
    function clearPage() {
        document.body.innerHTML = 'Reloading page... Waiting for server...';
    }
    </script>
</head>
<body>
    <h1>Progressive Rendering with Marko</h1>

    <fieldset>
        <legend>Options</legend>

        <h3>Page Render Mode:</h3>

        <def function="renderModeOption(type, desc)">
            <span if="data.renderMode === type">
                $desc ←
            </span>
            <span else>
                <a href="/?renderMode=${type}&amp;jsLocation=${data.jsLocation}" onclick="clearPage();">$desc</a>
            </span>
        </def>

        <ul>
            <li>
                ${renderModeOption('single-chunk', 'Single Chunk')}
            </li>
            <li>
                ${renderModeOption('progressive-in-order', 'Progressive (in-order)')}
            </li>
            <li>
                ${renderModeOption('progressive-out-of-order', 'Progressive (out-of-order)')}
            </li>
        </ul>

        <h3>Location of script tags:</h3>

        <def function="jsLocationOption(loc, desc)">
            <span if="data.jsLocation === loc">
                $desc ←
            </span>
            <span else>
                <a href="?renderMode=${data.renderMode}&amp;jsLocation=${loc}" onclick="clearPage();">$!desc</a>
            </span>
        </def>

        <ul>
            <li>
                ${jsLocationOption('middle', 'Before async fragments')}
            </li>
            <li>
                ${jsLocationOption('bottom', 'After async fragments')}
            </li>
        </ul>
    </fieldset>



    <h3 id="loading">
        Page loading...
    </h3>

    <p>
        Top text
    </p>

    <if test="data.jsLocation eq 'middle'">
        <optimizer-body/>
    </if>

    <async-fragment data-provider="data.headerDataProvider"
        arg-delay="${500}"
        var="header"
        client-reorder="data.reorderEnabled">

        <header w-bind="./header-widget">
            <h1>1) Header</h1>
            <span w-el-id="message">&nbsp;</span>
        </header>
    </async-fragment>

    <async-fragment data-provider="data.navDataProvider"
        arg-delay="${1000}"
        var="nav"
        client-reorder="data.reorderEnabled">

        <nav w-bind="./nav-widget">
            <h1>2) Nav</h1>
            <span w-el-id="message">&nbsp;</span>
        </nav>
    </async-fragment>

    <async-fragment data-provider="data.mainDataProvider"
        arg-delay="${2000}"
        var="main"
        client-reorder="data.reorderEnabled"
        name="main">

        <async-fragment-placeholder>
            Loading "main"...
        </async-fragment-placeholder>

        <main w-bind="./main-widget">
            <h1>3) Main</h1>
            <span w-el-id="message">&nbsp;</span>
        </main>
    </async-fragment>

    <async-fragment data-provider="data.footerDataProvider"
        arg-delay="${1000}"
        var="footer"
        client-reorder="data.reorderEnabled"
        show-after="main">

        <!--
        NOTE: This demonstrates how the "show-after" attribute
              can be used to delay showing an async fragment
              until after another async fragment is shown.
        -->

        <footer w-bind="./footer-widget">
            <h1>4) Footer</h1>
            <span w-el-id="message">&nbsp;</span>
        </footer>
    </async-fragment>

    <p>
        Bottom text
    </p>

    <async-fragments/>

    <if test="data.jsLocation eq 'bottom'">
        <optimizer-body/>
        <init-widgets/>
    </if>
    <else>
        <init-widgets immediate/>
        <!-- NOTE: Use immediate if the JavaScript is included before the rendered widgets -->
    </else>

</body>
</html>